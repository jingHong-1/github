<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.mapper.QuestionMapper" >
  <resultMap id="BaseResultMap" type="com.example.demo.model.Question" >
    <id column="ID" property="id" jdbcType="BIGINT" />
    <result column="TITLE" property="title" jdbcType="VARCHAR" />
    <result column="GMT_CREATE" property="gmtCreate" jdbcType="BIGINT" />
    <result column="GMT_MODIFIED" property="gmtModified" jdbcType="BIGINT" />
    <result column="CREATOR" property="creator" jdbcType="BIGINT" />
    <result column="COMMENT_COUNT" property="commentCount" jdbcType="INTEGER" />
    <result column="VIEW_COUNT" property="viewCount" jdbcType="INTEGER" />
    <result column="LIKE_COUNT" property="likeCount" jdbcType="INTEGER" />
    <result column="TAG" property="tag" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.example.demo.model.Question" extends="BaseResultMap" >
    <result column="DESCRIPTION" property="description" jdbcType="CLOB" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, TITLE, GMT_CREATE, GMT_MODIFIED, CREATOR, COMMENT_COUNT, VIEW_COUNT, LIKE_COUNT, 
    TAG
  </sql>
  <sql id="Blob_Column_List" >
    DESCRIPTION
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.example.demo.model.QuestionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from QUESTION
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.demo.model.QuestionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from QUESTION
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from QUESTION
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from QUESTION
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.model.QuestionExample" >
    delete from QUESTION
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.model.Question" >
    insert into QUESTION (TITLE, GMT_CREATE,
      GMT_MODIFIED, CREATOR, COMMENT_COUNT, 
      VIEW_COUNT, LIKE_COUNT, TAG, 
      DESCRIPTION)
    values ( #{title,jdbcType=VARCHAR}, #{gmtCreate,jdbcType=BIGINT},
      #{gmtModified,jdbcType=BIGINT}, #{creator,jdbcType=BIGINT}, #{commentCount,jdbcType=INTEGER}, 
      #{viewCount,jdbcType=INTEGER}, #{likeCount,jdbcType=INTEGER}, #{tag,jdbcType=VARCHAR}, 
      #{description,jdbcType=CLOB})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.model.Question" >
    insert into QUESTION
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="title != null" >
        TITLE,
      </if>
      <if test="gmtCreate != null" >
        GMT_CREATE,
      </if>
      <if test="gmtModified != null" >
        GMT_MODIFIED,
      </if>
      <if test="creator != null" >
        CREATOR,
      </if>
      <if test="commentCount != null" >
        COMMENT_COUNT,
      </if>
      <if test="viewCount != null" >
        VIEW_COUNT,
      </if>
      <if test="likeCount != null" >
        LIKE_COUNT,
      </if>
      <if test="tag != null" >
        TAG,
      </if>
      <if test="description != null" >
        DESCRIPTION,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null" >
        #{gmtCreate,jdbcType=BIGINT},
      </if>
      <if test="gmtModified != null" >
        #{gmtModified,jdbcType=BIGINT},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=BIGINT},
      </if>
      <if test="commentCount != null" >
        #{commentCount,jdbcType=INTEGER},
      </if>
      <if test="viewCount != null" >
        #{viewCount,jdbcType=INTEGER},
      </if>
      <if test="likeCount != null" >
        #{likeCount,jdbcType=INTEGER},
      </if>
      <if test="tag != null" >
        #{tag,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=CLOB},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.model.QuestionExample" resultType="java.lang.Integer" >
    select count(*) from QUESTION
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update QUESTION
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.title != null" >
        TITLE = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.gmtCreate != null" >
        GMT_CREATE = #{record.gmtCreate,jdbcType=BIGINT},
      </if>
      <if test="record.gmtModified != null" >
        GMT_MODIFIED = #{record.gmtModified,jdbcType=BIGINT},
      </if>
      <if test="record.creator != null" >
        CREATOR = #{record.creator,jdbcType=BIGINT},
      </if>
      <if test="record.commentCount != null" >
        COMMENT_COUNT = #{record.commentCount,jdbcType=INTEGER},
      </if>
      <if test="record.viewCount != null" >
        VIEW_COUNT = #{record.viewCount,jdbcType=INTEGER},
      </if>
      <if test="record.likeCount != null" >
        LIKE_COUNT = #{record.likeCount,jdbcType=INTEGER},
      </if>
      <if test="record.tag != null" >
        TAG = #{record.tag,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null" >
        DESCRIPTION = #{record.description,jdbcType=CLOB},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update QUESTION
    set ID = #{record.id,jdbcType=BIGINT},
      TITLE = #{record.title,jdbcType=VARCHAR},
      GMT_CREATE = #{record.gmtCreate,jdbcType=BIGINT},
      GMT_MODIFIED = #{record.gmtModified,jdbcType=BIGINT},
      CREATOR = #{record.creator,jdbcType=BIGINT},
      COMMENT_COUNT = #{record.commentCount,jdbcType=INTEGER},
      VIEW_COUNT = #{record.viewCount,jdbcType=INTEGER},
      LIKE_COUNT = #{record.likeCount,jdbcType=INTEGER},
      TAG = #{record.tag,jdbcType=VARCHAR},
      DESCRIPTION = #{record.description,jdbcType=CLOB}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update QUESTION
    set ID = #{record.id,jdbcType=BIGINT},
      TITLE = #{record.title,jdbcType=VARCHAR},
      GMT_CREATE = #{record.gmtCreate,jdbcType=BIGINT},
      GMT_MODIFIED = #{record.gmtModified,jdbcType=BIGINT},
      CREATOR = #{record.creator,jdbcType=BIGINT},
      COMMENT_COUNT = #{record.commentCount,jdbcType=INTEGER},
      VIEW_COUNT = #{record.viewCount,jdbcType=INTEGER},
      LIKE_COUNT = #{record.likeCount,jdbcType=INTEGER},
      TAG = #{record.tag,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.model.Question" >
    update QUESTION
    <set >
      <if test="title != null" >
        TITLE = #{title,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null" >
        GMT_CREATE = #{gmtCreate,jdbcType=BIGINT},
      </if>
      <if test="gmtModified != null" >
        GMT_MODIFIED = #{gmtModified,jdbcType=BIGINT},
      </if>
      <if test="creator != null" >
        CREATOR = #{creator,jdbcType=BIGINT},
      </if>
      <if test="commentCount != null" >
        COMMENT_COUNT = #{commentCount,jdbcType=INTEGER},
      </if>
      <if test="viewCount != null" >
        VIEW_COUNT = #{viewCount,jdbcType=INTEGER},
      </if>
      <if test="likeCount != null" >
        LIKE_COUNT = #{likeCount,jdbcType=INTEGER},
      </if>
      <if test="tag != null" >
        TAG = #{tag,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        DESCRIPTION = #{description,jdbcType=CLOB},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.example.demo.model.Question" >
    update QUESTION
    set TITLE = #{title,jdbcType=VARCHAR},
      GMT_CREATE = #{gmtCreate,jdbcType=BIGINT},
      GMT_MODIFIED = #{gmtModified,jdbcType=BIGINT},
      CREATOR = #{creator,jdbcType=BIGINT},
      COMMENT_COUNT = #{commentCount,jdbcType=INTEGER},
      VIEW_COUNT = #{viewCount,jdbcType=INTEGER},
      LIKE_COUNT = #{likeCount,jdbcType=INTEGER},
      TAG = #{tag,jdbcType=VARCHAR},
      DESCRIPTION = #{description,jdbcType=CLOB}
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.model.Question" >
    update QUESTION
    set TITLE = #{title,jdbcType=VARCHAR},
      GMT_CREATE = #{gmtCreate,jdbcType=BIGINT},
      GMT_MODIFIED = #{gmtModified,jdbcType=BIGINT},
      CREATOR = #{creator,jdbcType=BIGINT},
      COMMENT_COUNT = #{commentCount,jdbcType=INTEGER},
      VIEW_COUNT = #{viewCount,jdbcType=INTEGER},
      LIKE_COUNT = #{likeCount,jdbcType=INTEGER},
      TAG = #{tag,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <select resultMap="ResultMapWithBLOBs" parameterType="com.example.demo.model.QuestionExample" id="selectByExampleWithBLOBsWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from QUESTION
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select resultMap="BaseResultMap" parameterType="com.example.demo.model.QuestionExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from QUESTION
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>